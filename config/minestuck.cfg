# Configuration file

General {
    # Adapt the transferred height to make the top non-air block to be placed at y:128. Makes entry take slightly longer.
    B:adaptEntryBlockHeight=true

    # The number of stacks that can be alchemized at the same time with the alchemiter.
    I:alchemiterMaxStacks=16

    # Set this to true to replace grist names in alchemiter/grist widget with the grist icon.
    B:alchemyIcons=true

    # Radius of the land brought into the medium.
    I:artifactRange=30

    # If this is true, players will gain certain potion effects once they reach a certain rung based on their aspect.
    B:aspectEffects=true

    # Lets gates be destroyed by explosions. Turning this off will make gates use the same explosion resistance as bedrock.
    B:canBreakGates=true

    # An integer that determines how much a captchalouge card costs to alchemize
    I:cardCost=1

    # If enabled, the regular cruxtruder will require raw cruxite to function, which is inserted through the pipe.
    B:cruxtruderIntake=false

    # Determines who's allowed to access the data checker. "none": No one is allowed. "ops": only those with a command permission of level 2 or more may access the data ckecker. (for single player, that would be if cheats are turned on) "gamemode": Only players with the creative or spectator gamemode may view the data checker. "opsAndGamemode": Combination of "ops" and "gamemode". "anyone": No access restrictions are used.
    S:dataCheckerPermission=opsAndGamemode

    # Determines if a card with a captcha card punched on it should be added to the deploy list or not.
    B:deployCard=false

    # Right now, the giclops pathfinding is currently causing huge amounts of lag due to their size. This option is a short-term solution that will disable giclops spawning and remove all existing giclopes.
    B:disableGiclops=true
    B:disableGristWidget=false

    # Allows control of standard speed for the echeladder rung "animation", or if it should have one in the first place.
    S:echeladderAnimationNew=normal

    # If this is true, players will be able to see their progress towards the next rung. This is server side and will only be active in multiplayer if the server/Lan host has it activated.
    B:echeladderProgress=false

    # Disable this to prevent craters from people entering the medium.
    B:entryCrater=true

    # A list of dimension id's that you cannot travel to or from using transportalizers.
    I:forbiddenDimensionsTpz <
     >

    # If cruxite ore should be generated in the overworld.
    B:generateCruxiteOre=true

    # If uranium ore should be generated in the overworld.
    B:generateUraniumOre=true

    # Setting this to true replaces editmode with the old Give Items button.
    B:giveItems=false

    # Whenether all connetions should be put into a single session or not.
    B:globalSession=false

    # Enable this and players will get a (full) grist refund from breaking blocks in editmode.
    B:gristRefund=false
    B:keepDimensionsLoaded=true

    # The maximum number of Land animals (eg frogs and rabbits) in a spawn cluster.
    I:landAnimalSpawnAmount=10

    # A number that determines how far away from the center of the brought land that an editmode player may be after entry.
    I:landEditRange=30

    # Determines if the color selector should be displayed when entering a save file for the first time.
    B:loginColorSelector=true

    # If this is true, players need to have a computer nearby to Enter
    B:needComputer=true

    # Set this to true to have back all old 2D item models.
    B:oldItemModels=false

    # Multiplies the cost for the 'contents' of an ore. Set to 0 to disable alchemizing ores.
    I:oreMultiplier=1

    # A number that determines how far away from the computer an editmode player may be before entry.
    I:overworldEditRange=15

    # Enable this to let players select their own title. They will however not be able to select the Lord or Muse as class.
    B:playerSelectedTitle=false

    # Determines if the small portable machines should be included in the deploy list.
    B:portableMachines=false

    # The highest rung you can get before entering medium. Note that the first rung is indexed as 0, the second as 1 and so on.
    I:preEntryRungLimit=6

    # True if computers should only be able to be used by the owner.
    B:privateComputers=true

    # Set this to true to allow so-called 'secondary connections' to be created.
    B:secondaryConnections=false

    # If this is true, grist change messages will appear
    B:showGristChanges=true

    # If enabled, will during certain moments perform a check on all connections and computers that are in use. Recommended to turn off if there is a need to improve performance, however skaianet-related bugs might appear when done so.
    B:skaianetCheck=true

    # If this is true, players may only use an artifact once, even if they end up in the overworld again.
    B:stopSecondEntry=false

    # If this is set to true, minestuck will use uuids to refer to players in the saved data. On false it will instead use the old method based on usernames.
    B:uuidIdentification=true

    # If this is true, the custom vanilla ores will drop the standard vanilla ores when mined, instead of the custom type.
    B:vanillaOreDrop=true
}


IDs {
    I:biomeIdStart=50
    I:landDimensionIdStart=3
    I:landProviderTypeId=3
    I:skaiaDimensionId=2
    I:skaiaProviderTypeId=2
    I:specialWindowIdStart=-10
}


Modus {
    # An array with the possible modus types to be assigned. Written with mod-id and modus name, for example "minestuck:queue_stack" or "minestuck:hashmap"
    S:defaultModusTypes <
        minestuck:stack
        minestuck:queue
     >

    # When sylladexes are droppable, this option determines if items should be dropped inside of cards or items and cards as different stacks.
    B:dropItemsInCards=true

    # This determines if auto-balance should be forced. 'both' if the player should choose, 'on' if forced at on, and 'off' if forced at off.
    S:forceAutobalance=both

    # This determines if hashmap chat ejection should be forced. 'both' if the player should choose, 'on' if forced at on, and 'off' if forced at off.
    S:forceEjectByChat=on
    I:initialModusSize=5

    # Determines which items from the modus that are dropped on death. "items": Only the items are dropped. "cardsAndItems": Both items and cards are dropped. (So that you have at most initialModusSize amount of cards) "all": Everything is dropped, even the modus.
    S:itemDropMode=cardsAndItems

    # The max size on a modus. Ignored if the value is 0.
    I:modusMaxSize=0
}


